xmlelement vehicleJourneys {
	foreach trip {
		from 'GetAll(vehicle_schedule, vsc_is_current).Get(trip, md_trp_sel)'
			condition 'trp_is_in_service'
			unique_on 'vsc_int_id, trp_route, trp_number'
			sort_by TripStopSort {
				criteria vsc_int_id
				criteria trp_route
				criteria trp_number
			} # sort_by TripStopSort

			xmlelement ServiceJourney {
				xmlattribute id         { value 'md_operatorId + ":ServiceJourney:" + vsc_int_id + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
				xmlattribute version	{ value 'md_frameVersion' }

				xmlattribute dataSourceRef {
					condition 'NOT md_dataownerisoperator'
					value '"BISON:DataSource:UNKNOWN"'
				}

				xmlelement validityConditions {
					xmlelement AvailabilityConditionRef {
						# TODO: uitzoeken wat de relatie trip naar scheduling_unit is
						# TODO: this assumes that the trip doesn't have his own changes
						xmlattribute ref        { value 'md_operatorId + ":AvailabilityCondition:" + vsc_int_id ' }
						xmlattribute version	{ value 'md_frameVersion' }
					} # xmlelement AvailabilityConditionRef
				} # xmlelement validityConditions

				xmlelement keyList {
					xmlelement KeyValue {
						xmlelement Key              { value '"JourneyNumber"' }
						xmlelement Value            { value 'Trim(trp_number)' }
					} # xmlelement keyList

					xmlelement KeyValue {
						condition 'NOT md_dataownerisoperator'
							xmlelement Key              { value '"DataOwnerIsOperator"' }
							xmlelement Value            { value '"false"' }
					} # xmlelement keyList
				}

				xmlelement ShortName { value 'trim(trp_number)' }
				xmlelement DepartureTime { value 'md_departureTime' }
				xmlelement DepartureDayOffset { value 'IF trp_time_start >= 24:00 THEN 1 ELSE IF trp_time_start < 0:00 THEN -1 ELSE 0' }
	
				xmlelement dayTypes {
					xmlelement DayTypeRef {
						xmlattribute ref { value 'md_operatorId + ":DayType:" + trp_oper_days_12' }
						xmlattribute version { value 'md_frameVersion' }
					}
				}

				xmlelement ServiceJourneyPatternRef {
					xmlattribute ref                { value 'md_operatorId + ":ServiceJourneyPattern:" + vsc_int_id + ":" + Trim(tpat_route) + ":" + tpat_id' }
					xmlattribute version			{ value 'md_frameVersion' }
				} # xmlelement JourneyPatternRef

				xmlelement TimeDemandTypeRef {
					condition 'trp_run_time_pattern <> ""' # Hack
					xmlattribute ref                { value 'md_operatorId + ":TimeDemandType:" + vsc_int_id + ":" + Trim(tpat_route) + ":" + trp_run_time_pattern' }
					xmlattribute version            { value 'md_frameVersion' }
				} # xmlelement TimeDemandTypeRef
				
				# Als blockinformatie niet wordt geexporteerd, zou hier de VehicleType ook duidelijk worden
				# xmlelement VehicleTypeRef {
				#	xmlattribute ref                { value 'md_operatorId + ":TimeDemandType:" + vsc_int_id + ":" + Trim(tpat_route) + ":" + trp_run_time_pattern' }
				#	xmlattribute version            { value 'md_frameVersion' }
				# }
				
				# Hier nog wat doen met Branch informatie?
				# xmlelement OperationalContextRef {
				#	condition 'vsc_sched_unit <> ""'
				#	xmlattribute ref				{ value 'md_operatorId + ":OperationalContext:" + vsc_sched_unit' }
				#	xmlattribute version 			{ value '"any"' }
				# } # OperationalContextRef
				
				xmlelement BlockRef {
					xmlattribute ref				{ value 'md_operatorId + ":Block:" + vsc_int_id + ":" + trim(trp_block) ' }
					xmlattribute version			{ value 'md_frameVersion' }
				} # xmlelement BlockRef
		} # xmlelement ServiceJourney
	} # foreach trip

	foreach trip {
		from 'GetAll(vehicle_schedule, vsc_is_current).Get(trip, md_trp_sel)'
			condition 'NOT trp_is_in_service'
			unique_on 'vsc_int_id, trp_route_statistic, trp_number'
			sort_by TripStopSort {
				criteria vsc_int_id
				criteria trp_route_statistic
				criteria trp_number
			} # sort_by TripStopSort

			xmlelement DeadRun {
				xmlattribute id			{ value 'md_operatorId + ":DeadRun:" + vsc_int_id + ":" + Trim(trp_route_statistic) + ":" + trim(trp_number)' }
				xmlattribute version	{ value 'md_frameVersion' }

				xmlelement validityConditions {
					xmlelement AvailabilityConditionRef {
						# TODO: uitzoeken wat de relatie trip naar scheduling_unit is
						xmlattribute ref        { value 'md_operatorId + ":AvailabilityCondition:" + vsc_int_id ' }
						xmlattribute version	{ value 'md_frameVersion' }
					} # xmlelement AvailabilityConditionRef
				} # xmlelement validityConditions

				xmlelement keyList {
					xmlelement KeyValue {
						xmlelement Key              { value '"JourneyNumber"' }
						xmlelement Value            { value 'trim(trp_number)' }
					} # xmlelement keyList
				}

				xmlelement ShortName { value 'Trim(trp_number)' }
				xmlelement DepartureTime { value 'md_departureTime' }
				xmlelement DepartureDayOffset { value 'IF trp_time_start >= 24:00 THEN 1 ELSE IF trp_time_start < 0:00 THEN -1 ELSE 0' }

				xmlelement dayTypes {
					xmlelement DayTypeRef {
						xmlattribute ref { value 'md_operatorId + ":DayType:" + trp_oper_days_12' }
						xmlattribute version { value 'md_frameVersion' }
					}
				}

				xmlelement DeadRunJourneyPatternRef {
					condition 'trp_run_time_pattern <> ""'
					xmlattribute ref 				{ value 'md_operatorId + ":DeadRunJourneyPattern:" + vsc_int_id + ":" + Trim(trp_route_statistic) + ":" + trp_run_time_pattern' }
					xmlattribute version			{ value 'md_frameVersion' }
				} # xmlelement DeadRunJourneyPatternRef

				xmlelement TimeDemandTypeRef {
					condition 'trp_run_time_pattern <> ""'
					xmlattribute ref                { value 'md_operatorId + ":TimeDemandType:" + vsc_int_id + ":" + Trim(trp_route_statistic) + ":" + trp_run_time_pattern' }
					xmlattribute version            { value 'md_frameVersion' }
				} # xmlelement TimeDemandTypeRef

				xmlelement BlockRef {
					xmlattribute ref				{ value 'md_operatorId + ":Block:" + vsc_int_id + ":" + trim(trp_block) ' }
					xmlattribute version			{ value 'md_frameVersion' }
				} # xmlelement BlockRef

				xmlelement DeadRunType {
					value 'IF trp_type=1 THEN "garageRunOut" ELSE IF trp_type=2 THEN "garageRunIn" ELSE "other"'
				}
		} # xmlelement ServiceJourney
	} # foreach trip
} # xmlelement vehicleJourneys
