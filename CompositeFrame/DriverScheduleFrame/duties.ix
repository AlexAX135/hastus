xmlelement duties {
	foreach crew_schedule {
		sort_by CSC { 
			criteria csc_int_no
		} # sort_by	CSC				

		foreach duty {			
			sort_by dutySort {
				criteria dty_number { value 'dty_number' }
			}
			
			var v_duty_part_index 		{assign '0'}
			
			xmlelement Duty {
				xmlattribute id { value 'md_operatorId + ":Duty:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number)' }
				xmlattribute version { value 'md_frameVersion' }
				
				xmlelement validityConditions {
					xmlelement AvailabilityConditionRef {
						# TODO: uitzoeken wat de relatie trip naar scheduling_unit is
						# TODO: this assumes that the trip doesn't have his own changes
						xmlattribute ref        { value 'md_operatorId + ":AvailabilityCondition:Crew:" + csc_int_no ' }
						xmlattribute version { value 'md_frameVersion' }
					} # xmlelement AvailabilityConditionRef
				} # xmlelement validityConditions
				
				xmlelement Description { value 'Trim(dty_number)' }
				xmlelement dutyParts {
					foreach duty_activity {
						sort_by tripSort {
							criteria dty_act_start_time { value 'dty_act_start_time' }
						}
						
						# TODO: hoe optellen binnen XML element?
						var v_duty_part_index 		{ assign 'IF dty_act_category IN [4, 14, 17, 18] THEN v_duty_part_index + 1 ELSE v_duty_part_index'}
									
						xmlelement DriverTrip {							
							condition '(dty_act_category = 14 /* Travel */ OR dty_act_category = 17 /* Walk */)'							
							xmlattribute id { value 'md_operatorId + ":Duty:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
							xmlattribute version { value 'md_frameVersion' }
							# RFC
							xmlattribute order { value 'v_duty_part_index'}
							xmlelement Description { value 'dty_act_name' }
							xmlelement AccountingTime { value 'md_dty_act_duration' }
							# RFC: 
							xmlelement StartTime { value 'md_startTime' }
							# RFC: 
							xmlelement StartDayOffset { condition 'dty_act_start_time >= 24:00' value 'IF dty_act_start_time >= 24:00 THEN 1 ELSE IF dty_act_start_time < 0:00 THEN -1 ELSE 0' }							
							xmlelement EndTime { value 'md_endTime' }
							# RFC: DayOffset to EndTimeDayOffset
							xmlelement EndTimeDayOffset { condition 'dty_act_end_time >= 24:00' value 'IF dty_act_end_time >= 24:00 THEN 1 ELSE IF dty_act_end_time < 0:00 THEN -1 ELSE 0' }							
							
							xmlelement StartPointRef {
								xmlattribute ref { value 'md_operatorId + ":StopPlace:" + dty_act_start_place' }
								xmlattribute version { value 'md_frameVersion' }
							}
							xmlelement EndPointRef {
								xmlattribute ref { value 'md_operatorId + ":StopPlace:" + dty_act_end_place' }
								xmlattribute version { value 'md_frameVersion' }
							}
							
							# OIG-Hack :)
							foreach trip {
								xmlelement BlockRef {
									xmlattribute id         { value 'md_operatorId + ":Block:" + vsc_int_id + ":" + Trim(blk_number)' }
									xmlattribute version	{ value 'md_frameVersion' }
								}

								xmlelement ServiceJourneyRef {
									condition 'trp_is_in_service'
									xmlattribute ref { value 'md_operatorId + ":ServiceJourney:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
									xmlattribute version { value 'md_frameVersion' }
								}
							
								xmlelement DeadRunRef {
									condition 'NOT trp_is_in_service'
									xmlattribute ref { value 'md_operatorId + ":ServiceJourney:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
									xmlattribute version { value 'md_frameVersion' }							 	
								}
							}
						}
						
						xmlelement DriverTrip {	
							condition '(dty_act_category = 18 /* Travel trip */)'
							xmlattribute id { value 'md_operatorId + ":Duty:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
							xmlattribute version { value 'md_frameVersion' }
							# RFC 
							xmlattribute order { value 'v_duty_part_index'}
							xmlelement Description { value 'Trim(dty_act_name)' }
							xmlelement AccountingTime { value 'md_dty_act_duration' }
							# RFC: 
							xmlelement StartTime { value 'md_startTime' }
							# RFC: 
							xmlelement StartDayOffset { condition 'dty_act_start_time >= 24:00' value 'IF dty_act_start_time >= 24:00 THEN 1 ELSE IF dty_act_start_time < 0:00 THEN -1 ELSE 0' }							
							xmlelement EndTime { value 'md_endTime' }
							# RFC: DayOffset to EndTimeDayOffset
							xmlelement EndTimeDayOffset { condition 'dty_act_end_time >= 24:00' value 'IF dty_act_end_time >= 24:00 THEN 1 ELSE IF dty_act_end_time < 0:00 THEN -1 ELSE 0' }
																						
							xmlelement StartPointRef {
								xmlattribute ref { value 'md_operatorId + ":StopPlace:" + dty_act_start_place' }
								xmlattribute version { value 'md_frameVersion' }
							}
							
							xmlelement EndPointRef {
								xmlattribute ref { value 'md_operatorId + ":StopPlace:" + dty_act_end_place' }
								xmlattribute version { value 'md_frameVersion' }
							}

							foreach trip {	
								xmlelement BlockRef {
									xmlattribute id         { value 'md_operatorId + ":Block:" + vsc_int_id + ":" + Trim(blk_number)' }
									xmlattribute version	{ value 'md_frameVersion' }
								}								
							
								xmlelement ServiceJourneyRef {
									condition 'trp_is_in_service'
									xmlattribute ref { value 'md_operatorId + ":ServiceJourney:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
									xmlattribute version { value 'md_frameVersion' }
								}
							
								xmlelement DeadRunRef {
									condition 'NOT trp_is_in_service'
									xmlattribute ref { value 'md_operatorId + ":ServiceJourney:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
									xmlattribute version { value 'md_frameVersion' }							 	
								}
							}
						}
									
						xmlelement DutyPart {
							condition '(dty_act_category = 4 /* DeadHead */)'
							# RFC 
							xmlattribute id { value 'md_operatorId + ":Duty:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
							xmlattribute version { value 'md_frameVersion' }
							xmlattribute order { value 'v_duty_part_index'}						
							xmlelement Description { value 'Trim(dty_act_name)' }
							xmlelement AccountingTime { value 'md_dty_act_duration' }
							xmlelement StartTime { value 'md_startTime' }
							# RFC:
							xmlelement StartDayOffset { condition 'dty_act_start_time >= 24:00' value 'IF dty_act_start_time >= 24:00 THEN 1 ELSE IF dty_act_start_time < 0:00 THEN -1 ELSE 0' }							
							xmlelement EndTime { value 'md_endTime' }
							# RFC: DayOffset to EndTimeDayOffset
							xmlelement EndTimeDayOffset { condition 'dty_act_end_time >= 24:00' value 'IF dty_act_end_time >= 24:00 THEN 1 ELSE IF dty_act_end_time < 0:00 THEN -1 ELSE 0' }
							
							# xmlelement StartPointRef { value 'md_operatorId + ":TimingPoint:" + dty_act_start_place' }
							# xmlelement EndPointRef { value 'md_operatorId + ":TimingPoint:" + dty_act_end_place' }
														
							xmlelement StartPointRef {
								xmlattribute ref { value 'md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, dty_act_start_time = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier' }
								xmlattribute version { value 'md_frameVersion' }
							}
							
							xmlelement EndPointRef {
								xmlattribute ref { value 'md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, dty_act_end_time = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier' }
								xmlattribute version { value 'md_frameVersion' }
							}
							
							# RFC:
							foreach trip {
								sort_by tripSort {
									criteria trp_time_start { value 'trp_time_start' }
								}
								condition 'trp_duration > 0h00'
								
								xmlelement BlockRef {
									xmlattribute id         { value 'md_operatorId + ":Block:" + vsc_int_id + ":" + Trim(blk_number)' }
									xmlattribute version	{ value 'md_frameVersion' }
								}								
							
							 	xmlelement ServiceJourneyRef {
										condition 'trp_is_in_service'
										xmlattribute ref { value 'md_operatorId + ":ServiceJourney:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
										xmlattribute version { value 'md_frameVersion' }
									}
									
								xmlelement DeadRunRef {
									condition 'NOT trp_is_in_service'
									xmlattribute ref { value 'md_operatorId + ":DeadRun:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
									xmlattribute version { value 'md_frameVersion' }
								}
							}
						}
						
						foreach piece {
							condition 'dty_act_category = 9 /* Piece */ AND pce_duration > 0h00'
							
							foreach trip {
								sort_by tripSort {
									criteria trp_time_start { value 'trp_time_start' }
									criteria trp_time_end { value 'trp_time_end' }
								}
								condition 'trp_duration > 0h00'
								
								var v_duty_part_index 		{assign ' v_duty_part_index + 1 '}
								
								xmlelement DutyPart {
									# RFC 
									xmlattribute id { value 'md_operatorId + ":Duty:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
									xmlattribute version { value 'md_frameVersion' }
									xmlattribute order { value 'v_duty_part_index' }

									xmlelement Description { value 'IF trp_is_in_service THEN Trim(blk_number) + ": " + Trim(trp_route) + " (" + Trim(trp_route_public) + ") " + Trim(trp_number) ELSE Trim(dty_act_name)' }									
									
									xmlelement AccountingTime { value 'md_durationCalc' }
									xmlelement StartTime { value 'md_startTimeCalc' }
									# RFC:
									xmlelement StartDayOffset { condition 'trp_tim_strt_pce >= 24:00' value 'IF trp_tim_strt_pce >= 24:00 THEN 1 ELSE IF trp_tim_strt_pce < 0:00 THEN -1 ELSE 0' }
									xmlelement EndTime { value 'md_endTimeCalc' }
									# RFC: DayOffset to EndTimeDayOffset
									xmlelement EndTimeDayOffset { condition 'trp_tim_end_pce >= 24:00' value 'IF trp_tim_end_pce >= 24:00 THEN 1 ELSE IF trp_tim_end_pce < 0:00 THEN -1 ELSE 0' }
									
									# xmlelement StartPointRef { value 'md_operatorId + ":TimingPoint:" + trp_plc_strt_pce' }
									# xmlelement EndPointRef { value 'md_operatorId + ":TimingPoint:" + trp_plc_end_pce' }
									
									xmlelement StartPointRef {
										xmlattribute ref { value 'md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier' }
										xmlattribute version { value 'md_frameVersion' }
									}
									
									xmlelement EndPointRef {
										xmlattribute ref { value 'md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier' }
										xmlattribute version { value 'md_frameVersion' }
									}

									# RFC:
									xmlelement BlockRef {
										xmlattribute id         { value 'md_operatorId + ":Block:" + vsc_int_id + ":" + Trim(blk_number)' }
										xmlattribute version	{ value 'md_frameVersion' }
									}
									
									xmlelement ServiceJourneyRef {
										condition 'trp_is_in_service'
										xmlattribute ref { value 'md_operatorId + ":ServiceJourney:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
										xmlattribute version { value 'md_frameVersion' }
									}
									
									xmlelement DeadRunRef {
										condition 'NOT trp_is_in_service'
										xmlattribute ref { value 'md_operatorId + ":DeadRun:" + vsc_int_id + ":" + vsc_sched_type + ":" + Trim(trp_route) + ":" + trim(trp_number)' }
										xmlattribute version { value 'md_frameVersion' }
									}
								} # DutyPart
							} # trip
						} # piece
					} # duty_activity
				} # dutyParts
			} # xmlelement Duty
		} # duty
	} # crew_schedule
} # xmlelement duties