xmlelement duties {
	foreach crew_schedule {
		sort_by CSC { 
			criteria csc_int_no
		} # sort_by	CSC				

		foreach duty {
			sort_by dutySort {
				criteria dty_number { value 'dty_number' }
			}
			
			var v_duty_part_index 		{assign '0'}
			
			var v_vsc_int_id 			{assign 'FirstValue(vsc_int_id)'}
			
			xmlelement Duty {
				xmlattribute id { value 'md_operatorId + ":Duty:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number)' }
				xmlattribute version { value 'md_frameVersion' }
				
				xmlelement validityConditions {
					xmlelement AvailabilityConditionRef {
						# TODO: uitzoeken wat de relatie trip naar scheduling_unit is
						# TODO: this assumes that the trip doesn't have his own changes
						xmlattribute ref        { value 'md_operatorId + ":AvailabilityCondition:Crew:" + csc_int_no ' }
						xmlattribute version { value 'md_frameVersion' }
					} # xmlelement AvailabilityConditionRef
				} # xmlelement validityConditions
				
				xmlelement Description { value 'Trim(dty_number)' }
				
				xmlelement dutyParts {					
					foreach half_duty {
						xmlelement DutyPart {
							xmlattribute id { value 'md_operatorId + ":DutyPart:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + half_dty_position' }
							xmlattribute version { value 'md_frameVersion' }						
							xmlelement AccountingTime { value 'md_half_dty_duration' }						
							xmlelement StartTime { value 'md_DutyPartStartTime' }							
							xmlelement StartTimeDayOffset { condition 'half_dty_start_time >= 24:00' value 'md_DutyPartStartTimeDayOffset' }							
							xmlelement EndTime { value 'md_DutyPartEndTime' }							
							xmlelement EndTimeDayOffset { condition 'half_dty_end_time >= 24:00' value 'md_DutyPartEndTimeDayOffset' }
							
							xmlelement dutyActivities {							
								foreach duty_activity {
									sort_by tripSort {
										criteria dty_act_sort_rank { value 'dty_act_sort_rank' }
									}

									# TODO: hoe optellen binnen XML element?
									var v_duty_part_index 		{ assign 'IF dty_act_category IN [4, 14, 17, 18] THEN v_duty_part_index + 1 ELSE v_duty_part_index'}
									
									xmlelement DriverTrip {							
										condition '(dty_act_category = 17 /* Walk */) AND dty_act_duration > 0h00'
										xmlattribute id { value 'md_operatorId + ":DriverTrip:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
										xmlattribute version { value 'md_frameVersion' }
										xmlelement Description { value 'Trim(dty_act_name)' }
										xmlelement AccountingTime { value 'md_dty_act_duration' }										
										
										xmlelement StartPointRef {
											xmlattribute ref { value 'md_operatorId + ":StopArea:" + dty_act_start_place' }
											xmlattribute version { value 'md_frameVersion' }
											xmlattribute nameOfRefClass { value '"StopArea"' }
										}

										xmlelement EndPointRef {
											xmlattribute ref { value 'md_operatorId + ":StopArea:" + dty_act_end_place' }
											xmlattribute version { value 'md_frameVersion' }
											xmlattribute nameOfRefClass { value '"StopArea"' }
										}

										xmlelement tripTimes {
											xmlelement DriverTripTime {
												xmlattribute id { value 'md_operatorId + ":DriverTripTime:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
												xmlelement StartTime { value 'md_SpellStartTime' }														
												xmlelement StartTimeDayOffset { condition 'dty_act_start_time >= 24:00' value 'md_SpellStartTimeDayOffset' }
												xmlelement EndTime { value 'md_SpellEndTime' }														
												xmlelement EndTimeDayOffset { condition 'dty_act_end_time >= 24:00' value 'md_SpellEndTimeDayOffset' }
												xmlelement StartPointRef { condition 'false' xmlattribute ref { value '""' } xmlattribute version { value '""' } xmlattribute nameOfRefClass { value '""' } }
												xmlelement EndPointRef { condition 'false' xmlattribute ref { value '""' } xmlattribute version { value '""' } xmlattribute nameOfRefClass { value '""' } }
												xmlelement LineRef { condition 'false'  xmlattribute ref { value '""' } xmlattribute version { value '""' } }
												xmlelement ServiceJourneyRef { condition 'false' xmlattribute ref { value '""' } xmlattribute version { value '""' } }
												xmlelement TransportMode { value '"foot"' }
											}
										}
									}
									
									xmlelement DriverTrip {	
										condition '(dty_act_category = 14 /* Travel */ OR dty_act_category = 18 /* Travel trip */) AND dty_act_duration > 0h00'
										xmlattribute id { value 'md_operatorId + ":DriverTrip:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
										xmlattribute version { value 'md_frameVersion' }
										xmlelement Description { value 'Trim(dty_act_name)' }
										xmlelement AccountingTime { value 'md_dty_act_duration' }										
																									
										xmlelement StartPointRef {
											xmlattribute ref { value 'md_operatorId + ":StopArea:" + dty_act_start_place' }
											xmlattribute version { value 'md_frameVersion' }
											xmlattribute nameOfRefClass { value '"StopArea"' }
										}
										
										xmlelement EndPointRef {
											xmlattribute ref { value 'md_operatorId + ":StopArea:" + dty_act_end_place' }
											xmlattribute version { value 'md_frameVersion' }
											xmlattribute nameOfRefClass { value '"StopArea"' }
										}
										
										foreach trip {											
											condition 'trp_duration > 0h00'
											xmlelement tripTimes {
												xmlelement DriverTripTime {
													xmlattribute id { value 'md_operatorId + ":DriverTripTime:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
													
													xmlelement StartTime { value 'md_SpellStartTime' }														
													xmlelement StartTimeDayOffset { condition 'dty_act_start_time >= 24:00' value 'md_SpellStartTimeDayOffset' }
													xmlelement EndTime { value 'md_SpellEndTime' }														
													xmlelement EndTimeDayOffset { condition 'dty_act_end_time >= 24:00' value 'md_SpellEndTimeDayOffset' }
													
													xmlelement StartPointRef {
														xmlattribute ref {
															value 'IF DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_is_public THEN md_operatorId + ":ScheduledStopPoint:" + DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier ELSE md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier'
														}
														xmlattribute version { value 'md_frameVersion' }
														xmlattribute nameOfRefClass {
															value 'IF DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_is_public THEN "ScheduledStopPoint" ELSE "TimingPoint"'
														}
													}

													xmlelement EndPointRef {
														xmlattribute ref {
															value 'IF DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_is_public THEN md_operatorId + ":ScheduledStopPoint:" + DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier ELSE md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier'
														}
														xmlattribute version { value 'md_frameVersion' }
														xmlattribute nameOfRefClass {
															value 'IF DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_is_public THEN "ScheduledStopPoint" ELSE "TimingPoint"'
														}
													}
													
													xmlelement LineRef {
														condition 'trp_is_in_service'
														xmlattribute ref { value 'md_operatorId + ":Line:" + Trim(trp_route_statistic)' }
														xmlattribute version 		{ value 'md_any' }
													}
													
													xmlelement ServiceJourneyRef {
														xmlattribute ref { 																
															value 'md_operatorId + ":ServiceJourney:" + v_vsc_int_id + ":" + Trim(trp_route) + ":" + trim(trp_number)' 
														}

														xmlattribute version { value 'md_frameVersion' }
													}
													
													xmlelement TransportMode { value 'md_rte_service_mode' }
												}
											}
										}
									}
									
									foreach piece {
										condition 'dty_act_category = 9 /* Piece */ AND pce_duration > 0h00'
										
										var v_duty_part_index 		{assign ' v_duty_part_index + 1 '} # TODO
										
										xmlelement DriverTrip {	
											condition 'pce_vehicle_group = "AFau"'
											xmlattribute id { value 'md_operatorId + ":DriverTrip:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
											xmlattribute version { value 'md_frameVersion' }
											xmlelement Description { value 'Trim(dty_act_name)' }
											xmlelement AccountingTime { value 'md_dty_act_duration' }											
																										
											xmlelement StartPointRef {
												xmlattribute ref { value 'md_operatorId + ":StopArea:" + dty_act_start_place' }
												xmlattribute version { value 'md_frameVersion' }
												xmlattribute nameOfRefClass { value '"StopArea"' }
											}
											
											xmlelement EndPointRef {
												xmlattribute ref { value 'md_operatorId + ":StopArea:" + dty_act_end_place' }
												xmlattribute version { value 'md_frameVersion' }
												xmlattribute nameOfRefClass { value '"StopArea"' }
											}
											
											xmlelement tripTimes {
												foreach trip {													
													condition 'trp_duration > 0h00'													
													xmlelement DriverTripTime {
														xmlattribute id { value 'md_operatorId + ":DriverTripTime:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
														xmlelement StartTime { value 'md_DrivingStartTime' }														
														xmlelement StartTimeDayOffset { condition 'trp_tim_strt_pce >= 24:00' value 'md_DrivingStartTimeDayOffset' }
														xmlelement EndTime { value 'md_DrivingEndTime' }														
														xmlelement EndTimeDayOffset { condition 'trp_tim_end_pce >= 24:00' value 'md_DrivingEndTimeDayOffset' }
														xmlelement StartPointRef {
															xmlattribute ref {
																value 'IF DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_is_public THEN md_operatorId + ":ScheduledStopPoint:" + DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier ELSE md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier'
															}
															xmlattribute version { value 'md_frameVersion' }
															xmlattribute nameOfRefClass {
																value 'IF DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_is_public THEN "ScheduledStopPoint" ELSE "TimingPoint"'
															}
														}

														xmlelement EndPointRef {
															xmlattribute ref {
																value 'IF DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_is_public THEN md_operatorId + ":ScheduledStopPoint:" + DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier ELSE md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier'
															}
															xmlattribute version { value 'md_frameVersion' }
															xmlattribute nameOfRefClass {
																value 'IF DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_is_public THEN "ScheduledStopPoint" ELSE "TimingPoint"'
															}
														}
														xmlelement LineRef { condition 'false'  xmlattribute ref { value '""' } xmlattribute version { value '""' } }
														xmlelement ServiceJourneyRef { condition 'false' xmlattribute ref { value '""' } xmlattribute version { value '""' } }
														xmlelement TransportMode { value '"car"' }
													}
												}
											}
										}

										xmlelement Stretch {
											# TODO: er voor zorgen dat er geen lege Stretches komen
											condition 'pce_vehicle_group <> "AFau"'
										
											# RFC 
											xmlattribute id { value 'md_operatorId + ":Stretch:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + pce_position' }
											xmlattribute version { value 'md_frameVersion' }

											xmlelement spells {
												foreach trip {													
													condition 'trp_duration > 0h00'
																							
													var v_duty_part_index 		{assign 'v_duty_part_index + 1 '}
																							
													xmlelement DrivingSpell {
														# TODO														
														xmlattribute id { value 'md_operatorId + ":DrivingSpell:" + csc_int_no + ":" + dty_crew_base + ":" + dty_type + ":" + Trim(dty_number) + ":" + v_duty_part_index' }
														xmlattribute version { value 'md_frameVersion' }
														
														xmlelement Description { value 'IF trp_is_in_service THEN Trim(blk_number) + ": " + Trim(trp_route) + " (" + Trim(trp_route_public) + ") " + Trim(trp_number) ELSE Trim(dty_act_name)' }
														
														xmlelement AccountingTime { value 'md_durationCalc' }
														
														xmlelement StartTime { value 'md_DrivingStartTime' }														
														xmlelement StartTimeDayOffset { condition 'trp_tim_strt_pce >= 24:00' value 'md_DrivingStartTimeDayOffset' }
														xmlelement EndTime { value 'md_DrivingEndTime' }														
														xmlelement EndTimeDayOffset { condition 'trp_tim_end_pce >= 24:00' value 'md_DrivingEndTimeDayOffset' }
														
														xmlelement StartReliefOpportunityRef {
															xmlattribute ref {
																value 'IF DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_is_public THEN md_operatorId + ":ScheduledStopPoint:" + DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier ELSE md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_identifier'
															}
															xmlattribute version { value 'md_frameVersion' }
															xmlattribute nameOfRefClass {
																value 'IF DefNull(Get(trip_tp, pce_time_start = ttp_passing_time, 1), Get(trip_tp, 1)).trppt_stop.stp_is_public THEN "ScheduledStopPoint" ELSE "TimingPoint"'
															}
														}

														xmlelement EndReliefOpportunityRef {
															xmlattribute ref {
																value 'IF DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_is_public THEN md_operatorId + ":ScheduledStopPoint:" + DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier ELSE md_operatorId + ":TimingPoint:" + DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_identifier'
															}
															xmlattribute version { value 'md_frameVersion' }
															xmlattribute nameOfRefClass {
																value 'IF DefNull(Get(trip_tp, pce_time_end = ttp_passing_time, 1), Get(trip_tp, "*")).trppt_stop.stp_is_public THEN "ScheduledStopPoint" ELSE "TimingPoint"'
															}
														}
														
														# RFC:
														xmlelement BlockRef {
															xmlattribute ref        { value 'md_operatorId + ":Block:" + v_vsc_int_id + ":" + Trim(blk_number)' }
															xmlattribute version	{ value 'md_frameVersion' }
														}

														xmlelement LineRef {
															condition 'trp_is_in_service'
															xmlattribute ref { value 'md_operatorId + ":Line:" + Trim(trp_route_statistic)' }
															xmlattribute version 		{ value 'md_any' }
														}
														
														xmlelement VehicleJourneyRef {
															xmlattribute ref { 
																condition 'trp_is_in_service'
																value 'md_operatorId + ":ServiceJourney:" + v_vsc_int_id + ":" + Trim(trp_route) + ":" + trim(trp_number)' 
															}
															
															xmlattribute ref { 
																condition 'NOT trp_is_in_service'													
																value 'md_operatorId + ":DeadRun:" + v_vsc_int_id + ":" + Trim(trp_route_statistic) + ":" + trim(trp_number)' 
															}

															xmlattribute version { value 'md_frameVersion' }
															
															xmlattribute nameOfRefClass { 
																condition 'trp_is_in_service'
																value '"ServiceJourney"' 
															}
															
															xmlattribute nameOfRefClass { 
																condition 'NOT trp_is_in_service'													
																value '"DeadRun"' 
															}
														}
													}
												} # trip
											}		
										} # Stretch
									} # piece
									
									
								} # duty_activity
							} # dutyActivities							
						} # DutyPart						
					} # half_duty
				} # dutyParts
			} # xmlelement Duty
		} # duty
	} # crew_schedule
} # xmlelement duties