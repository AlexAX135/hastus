xmlelement scheduledStopPoints {
	foreach trip_pattern_point {
		from 'GetAll(vehicle_schedule).get(trip, md_trp_valid).get(trip_pattern).get(trip_pattern_point)'
		condition 'stp_identifier <> "" AND stp_is_public'
		unique_on 'stp_identifier'
		sort_by 'stp_identifier'
		
		# from 'GetAll(vehicle_schedule, vsc_is_current).stps_in_vsc'
		# unique_on 'stp_identifier'
		# condition 'stp_is_public'
		# sort_by 'stp_identifier'
		xmlelement ScheduledStopPoint {
			xmlattribute id 				{ value 'md_operatorId + ":ScheduledStopPoint:" + stp_identifier' }
			xmlattribute version 			{ value 'md_frameVersion' }
			xmlelement keyList {
				xmlelement KeyValue {
					xmlelement Key 			{ value '"UserStopCode"' }
					xmlelement Value 		{ value 'stp_identifier' }
				} # xmlelement KeyValue
			} # xmlelement keyList
			xmlelement Name 				{ value 'stp_description' }
			xmlelement projections	{
				xmlelement PointProjection {
					xmlattribute id 				{ value 'md_operatorId + ":PointProjection:" + stp_identifier' }
					xmlattribute version 			{ value 'md_frameVersion' }

					xmlelement ProjectToPointRef {
						xmlattribute nameOfRefClass 		{ value '"RoutePoint"' }
						xmlattribute ref 					{ value 'md_operatorId + ":RoutePoint:" + stp_identifier' }
						xmlattribute version 				{ value 'md_frameVersion' }
					}
				}
			} # xmlelement projections
			xmlelement tariffZones {
				xmlelement TariffZoneRef {
					xmlattribute ref { value '"NL:TariffZone:" + stp_zone' }
					xmlattribute version { value '"any"' }
				}

				# Arriva TariffZone
				# xmlelement TariffZoneRef {
				#	xmlattribute ref { value '"ARR:TariffZone:" + stp_short_name' }
				#	xmlattribute version { value 'md_frameVersion' }
				# }
			}

			# Arriva
			# xmlelement ShortName			{ value 'stp_short_desc' }
			# xmlelement ShortStopCode		{ value 'stp_short_name' }
			xmlelement ForAlighting 		{ value 'IF stp_allow_debarking THEN "true" ELSE "false"' }
			xmlelement ForBoarding 			{ value 'IF stp_allow_boarding THEN "true" ELSE "false"' }
		} # xmlelement ScheduledStopPoint
	} # foreach trip_pattern_point
}